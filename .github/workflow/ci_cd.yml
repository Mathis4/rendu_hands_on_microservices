name: CI/CD Pipeline

# Déclencheurs du workflow
on:
  push:
    branches:
      - main  # Déclenche le workflow sur chaque push vers la branche 'main'
  pull_request:
    branches:
      - main  # Déclenche le workflow lors des PRs vers la branche 'main'

jobs:
  # Job de test
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m venv .venv
        ./.venv/bin/pip install -r requirements.txt

    - name: Run tests
      run: |
        ./.venv/bin/python -m unittest discover

  # Job de build et déploiement Docker
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Déploiement seulement après un test réussi

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t your-docker-image-name .
        docker tag your-docker-image-name your-dockerhub-username/your-docker-image-name:latest
        docker push your-dockerhub-username/your-docker-image-name:latest

    - name: Deploy to Production
      run: |
        # Commande pour déployer sur ton serveur de production (ex: Docker Compose)
        ssh user@your-server-ip "cd /path/to/your/app && docker-compose pull && docker-compose up -d"
